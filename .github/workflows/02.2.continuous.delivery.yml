name: Package Delivery Artifacts & Pre-Release

on:
  push:
    tags:
      - "*pre-release*"
  workflow_dispatch: {}

permissions:
  discussions: write
  contents: write
  packages: write
  pages: write

env:
  CI: true
  SITE_DIR: site

jobs:
  package-delivery:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          enablement: "true"

      - uses: actions/setup-python@v4
        with:
          python-version: 3.12
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Site
        run: |
          # python -m mkdocs build --clean --strict --verbose --site-dir '${{ env.SITE_DIR }}'
          python -m mkdocs build --clean --verbose --site-dir '${{ env.SITE_DIR }}'
      - name: Archive Site
        run: |
          zip -r ${{ env.SITE_DIR }}.zip ${{ env.SITE_DIR }}
      - run: |
          echo "Site directory ${{ env.SITE_DIR }} content:"
          ls -al ${{ env.SITE_DIR }}

      - uses: actions/create-github-app-token@v1
        id: generate-app-token
        with:
          app-id: ${{ vars.APP_ID_ACTIONS_ASSISTANT }}
          private-key: ${{ secrets.APP_PRIVATE_KEY_ACTIONS_ASSISTANT }}

      - name: Create pre-release
        uses: actions/github-script@v6
        id: create-pre-release
        with:
          github-token: ${{ steps.generate-app-token.outputs.token }}
          script: |

            const response = await github.request(
              'POST /repos/{owner}/{repo}/releases',
              {
                owner: context.repo.owner,
                repo: context.repo.repo,
                tag_name: '${{ github.ref }}',
                prerelease: true,
                discussion_category_name: 'Announcements',
                generate_release_notes: true,
                make_latest: true,
                headers: {
                  'X-GitHub-Api-Version': '2022-11-28'
                }
              }
            );

            console.dir(response);

            return response.data.id;

      - name: Upload release asset
        uses: actions/github-script@v6
        with:
          github-token: ${{ steps.generate-app-token.outputs.token }}
          script: |

            const response = await github.request(
              'POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}',
              {
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: '${{ steps.create-pre-release.outputs }}',
                name: '${{ env.SITE_DIR }}.zip',
                data: '@${{ env.SITE_DIR }}.zip',
                headers: {
                  'X-GitHub-Api-Version': '2022-11-28'
                }
              }
            )
