# This is a GitHub Actions workflow for versioning. It is triggered on every push to the main branch.
# It reads the content of the repository, retrieves the last version number, calculates the next version number, and creates a new git tag for the next version.
name: Versioning

on:
  push:
    branches:
      - main
      - lab-2

jobs:
  versioning:
    runs-on: ubuntu-latest
    steps:
      # The first step is to checkout the repository.
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # The next step is to get the last version number.
      - name: Get last version number
        id: get_last_version
        run: |
          # Retrieve the last git tag, as we will only be processing one delivery line.
          last_version=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          echo "Last version is $last_version"
          echo "last_version=$last_version" >> "$GITHUB_OUTPUT"
      # The next step is to calculate the next version number.
      - name: Get next version number
        id: get_next_version
        run: |
          major=$(echo $last_version | cut -d. -f1)
          minor=$(echo $last_version | cut -d. -f2)
          patch=$(echo $last_version | cut -d. -f3)

          next_patch=$((patch+1))

          next_version="$major.$minor.$next_patch"

          echo "Next version is $next_version"
          echo "next_version=$next_version" >> "$GITHUB_OUTPUT"
        env:
          last_version: ${{ steps.get_last_version.outputs.last_version }}
      # The final step is to create a new git tag for the next version.

      - name: Create tag for the next version
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag -a "$next_version" -m "Version $next_version"
          git push origin "$next_version"
        env:
          next_version: ${{ steps.get_next_version.outputs.next_version }}-pre-release
