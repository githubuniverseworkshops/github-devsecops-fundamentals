name: Versioning

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  versioning:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get last version number
        id: get_last_version
        run: |
          # Retrieve the last git tag, as we will only be processing one delivery line.
          last_version=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          echo "Last version is $last_version"
          echo "last_version=$last_version" >> "$GITHUB_OUTPUT"
      - name: Get next version number
        id: get_next_version
        run: |
          major=$(echo $last_version | cut -d. -f1)
          minor=$(echo $last_version | cut -d. -f2)
          patch=$(echo $last_version | cut -d. -f3)

          next_patch=$((patch+1))

          next_version="$major.$minor.$next_patch"

          echo "Next version is $next_version"
          echo "next_version=$next_version" >> "$GITHUB_OUTPUT"
        env:
          last_version: ${{ steps.get_last_version.outputs.last_version }}
      - name: Create tag for the next version
        run: |
          git config --local user.email "GitHub Actions"
          git config --local user.name "github-actions"
          git tag -a "$next_version" -m "Version $next_version"
          git push origin "$next_version"
        env:
          next_version: ${{ steps.get_next_version.outputs.next_version }}-pre-release
